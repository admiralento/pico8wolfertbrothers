pico-8 cartridge // http://www.pico-8.com
version 36
__lua__
function _init()
cls()
make_plane()
make_dragon()
end

function _update60()
collision_functions()
move_plane()
bullet_routines()
move_dragon(dragonx,dragony)
end

function _draw()
cls()
draw_actors()
end
-->8
--fighter plane and bullets
planex = 64
planey = 110
prev_btn = 0
bullet_count = 0

function make_plane()
 plane = make_actor(1,planex,planey,1,1)
 plane.health = 5
end

function move_plane()
 if btn(➡️,true) then planex += 1 end
 if btn(⬅️,true) then planex -= 1 end
 if btn(⬇️,true) then planey += 1 end
 if btn(⬆️,true) then planey -= 1 end
 if planex > 120 then
  planex = 120
 elseif planex < 0 then
  planex = 0
 end
 if planey < 0 then
  planey = 0
 elseif planey > 120 then
  planey = 120
 end
 plane.x = planex
 plane.y = planey
end


function bullet_routines()
 spawn_player_bullet()
 move_player_bullets()
 --handle bullet damage calculations here
end

function spawn_player_bullet()
 if btn(❎) and btn(❎) != prev_btn then
  for i in all(bullets) do
   bullet_count += 1
  end
  if bullet_count <= 1 then
   b = make_actor(2,plane.x,plane.y,1,1)
   add(bullets,b)
   sfx(0)
  end
  bullet_count = 0
 end
 prev_btn = btn(❎)
end

function move_player_bullets()
 bullets_to_remove = {}
 for b in all(bullets) do
  b.y -= 4
  if b.y <= 0 then
   add(bullets_to_remove,b)
  end
 end
 for r in all(bullets_to_remove) do
  del(bullets,r)
  del(actors,r)
 end
end
-->8
--actor handling

actors = {}
bullets = {}

function make_actor(sprite,x,y,width,height)
 a = {
 x = x,
 y = y,
 sprite = sprite,
 width = width,
 height = height,
 health = 1
 }
 add(actors, a)
 return a
end

function draw_actors()
 for a in all(actors) do
  spr(a.sprite,a.x,a.y,a.height,a.width)
 end
end

function collision_functions()
 for b in all(bullets) do
  collision = bullet_collide(b,dragon_part_list[1])
  if collision then
   del(bullets,b)
   del(actors,b)
  end
 end
end

function check_collision_beta(sp1,sp2,sp1size,sp2size)

 --initializing variables
 sp1x = sp1.x
 sp1y = sp1.y
 sp2x = sp2.x
 sp2y = sp2.y
 sp1size = sp1size * 8
 sp2size = sp2size * 8

 collision = false

 --checks if any of the overlapping pixels in sprites are both not black
 for x1=0,sp1size-1 do
  for y1=0,sp1size-1 do
   for x2=0,sp2size-1 do
    for y2=0,sp2size-1 do
     if (sp1x+x1 == sp2x+x2) and (sp1y+y1 == sp2y+y2) then
      if not(pget(sp1x+x1 , sp1y+y1) == 0) and not(pget(sp2x+x2 , sp2y+y2) == 0) then
       collision = true
      end
     end
    end
   end
  end
 end

 return collision
end

function bullet_collide(bull,hit)
 coll_list = {}
 add(coll_list,bull.x + 3)
 add(coll_list,bull.x + 4)
 
 collision = false
 
 if pget(bull.x + 3, bull.y - 1) == 0 and pget(bull.x + 4, bull.y - 1) then
  collision = false
 else
  collision = true
 end
 
 return collision
end
-->8
--dragon handling
dragonx = 1
dragony = 1
dragon_part_list = {}

function make_dragon()
 head = make_dragon_head()
 tail = make_dragon_tail()
 add(dragon_part_list,head)
 for i in all(tail) do
  add(dragon_part_list,i)
 end
end

function make_dragon_head()
 head = make_actor(46,dragonx,dragony,2,2)
 head.health = 100
 head.type = "head"
 return head
end

function make_dragon_tail()
 tail_list = {}
 for i = 1,7 do
  tail = make_actor(14,dragonx,dragony-50*i,2,2)
  tail.type = "tail"
  add(tail_list,tail)
 end
 return tail_list
end

function move_dragon(x,y)
 move_dragon_head(x,y)
 move_dragon_tail()
end

function move_dragon_head(x,y)
 head.x = x
 head.y = y
end

function move_dragon_tail()
 for a in all(dragon_part_list) do
  if a.type != "head" then
   a.x = previousx
   --make dragon tail offset by 1 x in the direction it came from

   a.y = previousy - 16
  end
  previousx = a.x
  previousy = a.y
 end
end
__gfx__
00000000000770000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000699999960000
00000000000770000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659dd9560000
00700700008668000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659999560000
00077000008668000006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659dd9560000
00077000088668800006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000699999960000
00700700888668880006600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659dd9560000
00000000880770880007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659999560000
00000000990000990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659dd9560000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000699999960000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659dd9560000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659999560000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659dd9560000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000699999960000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659dd9560000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659999560000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000659dd9560000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000699999960000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006999dd9996000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006999999996000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000069999dd9999600
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000699999999999960
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000699999dd9999960
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000999959999599990
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000999959dd9599990
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000099559999559900
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000995a5995a59900
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000099a5995a99000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009995995999000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000999999990000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000098998900000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000099999900000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e0000e00000
__sfx__
000b00003e6101a620066601d200202001b2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
