pico-8 cartridge // http://www.pico-8.com
version 36
__lua__
--startup

--const
spr_platform = 1
spr_platform_final = 2
spr_player = 33
spr_boss = 13

--global varibles
platform_cnt = 20
starting_platform = 1
actors = {}
platforms = {}
player = {}

prev_button_states = btn()

function _init()
 cls()
 generate_platforms(platform_cnt,1,1)

 --place platforms
 place_platforms_circle(63,63,56)

 --change last platform spr
 platforms[#platforms].s = spr_platform_final

 player = make_player(0,0,1,1)

 boss = make_boss()
end

function generate_platforms(n)
 for i=1,n do
  make_platform(0,0)
 end
end

function make_platform(x,y)
 p = make_actor(spr_platform,x,y,1,1)
 add(platforms, p)
end

function make_player(x,y)
 p = make_actor(spr_player,x,y,1,1)
 p.state = "static"
 p.current_platform = 1
 return p
end

function make_actor(s,x,y,h,w)
	a={
	 x = x,
	 y = y,
		s = s,
		h = h,
		w = w
	}
	add(actors,a)
	return a
end

function make_boss()
 b = make_actor(spr_boss,128/2-8,128/2-8,2,2)
 b.state = "static"
 return p
end
-->8
--calculate

function _update()
	get_user_input()
	move_to_platform()
	record_button_states()
end

function get_user_input()
 if btnp(0) then
  player.current_platform =
   ((player.current_platform-2) % #platforms) + 1
 end
 if btnp(1) then
  player.current_platform =
   (player.current_platform % #platforms) + 1
 end

end

function move_to_platform()
 local p = platforms[player.current_platform]
 if (player.x != p.x) then
  player.x = p.x
 end
 if (player.y != p.y) then
  player.y = p.y
 end
end

function btnpc(index)
 local mask = 1
 for i=1, index do
  mask *= 2
 end
 return (btn(index) and (band(prev_button_states,mask) == 0))
end

function record_button_states()
 prev_button_states = btn()
end
-->8
--render

function _draw()
	cls()
	draw_actors()
	print(player.current_platform,0,120)
end

function draw_actors()
 for a in all(actors) do
  spr(a.s,a.x,a.y,a.h,a.w)
 end
end
-->8
--helper functions

function place_platforms_circle(x,y,r,a)
 for n=1,#platforms do
  platforms[n].x = r*cos((n-1)/#platforms) + x
  platforms[n].y = r*sin((n-1)/#platforms) + y
 end
end
__gfx__
00000000888888889999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000066000000000000000
000000008888888899999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000006aa600000000000000
000000008888888899999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000006aa600000000000000
00000000888888889999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000006aaaa60000000000000
000000008888888899999999000000000000000000000000000000000000000000000000000000000000000000000000000000006666699aa996666600000000
000000008888888899999999000000000000000000000000000000000000000000000000000000000000000000000000000000006aaaa92aa29aaaa600000000
0000000088888888999999990000000000000000000000000000000000000000000000000000000000000000000000000000000006aaa92aa29aaa6000000000
00000000888888889999999900000000000000000000000000000000000000000000000000000000000000000000000000000000006aa92aa29aa60000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006aaaaaaaa600000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006a2aaaaaa600000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006aaa2222aaa60000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006aaaaaaaaaa60000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006aaaaa66aaaaa6000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006aaa660066aaa6000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006aa6600000066aa600000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000666000000000066600000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000cccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000c1cc1c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000c1cc1c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000cccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000c2222c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000cccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0001000000000000000e0501205014050190501b0501e050230502605000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
